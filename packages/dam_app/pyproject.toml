[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dam_app"
version = "0.1.0"
description = "A CLI application for the DAM system."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "AI Agent", email = "ai.agent@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

dependencies = [
    "dam",
    "alembic",
    "python-magic",
]

[project.optional-dependencies]
image = ["dam_media_image"]
audio = ["dam_media_audio"]
transcode = ["dam_media_transcode"]
psp = ["dam_psp"]
semantic = ["dam_semantic"]
all = [
    "dam_app[image]",
    "dam_app[audio]",
    "dam_app[transcode]",
    "dam_app[psp]",
    "dam_app[semantic]",
]

[project.scripts]
dam-cli = "dam_app.main:app"

[tool.ruff]
extend = "../../pyproject.toml"
exclude = ["build", "dist"]
include = ["src/**", "tests/**"]

[tool.pyright]
extends = "../../pyproject.toml"
include = ["src", "tests"]
exclude = []
reportDeprecated = true
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportGeneralTypeIssues = "none"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
markers = [
    "serial: mark a test as serial",
]

[tool.poe]
include = "../../shared_tasks.toml"

[tool.poe.tasks]
test = "pytest -n auto"
test-cov = "pytest -n auto --cov=src --cov-report=term-missing --cov-report=xml"
mypy = "mypy --config-file ../../pyproject.toml src tests"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dam"
version = "0.1.0"
description = "A Digital Asset Management system using an Entity-Component-System (ECS) architecture in Python."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "AI Agent", email = "ai.agent@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
]

dependencies = [
    "sqlalchemy",
    "typer",
    "python-dotenv",
    "pydantic",
    "pydantic-settings", # For settings management
    "psutil", # Added for system resource detection
    "psycopg[binary]", # For PostgreSQL connection using Psycopg 3
    "pgvector", # For vector support in SQLAlchemy
]

[project.optional-dependencies]
image = [
    "ImageHash",
    "Pillow"
]
video = [
]
audio = [
]
metadata = [
    "hachoir"
]
transcode-ffmpeg = []
transcode-cjxl = []
transcode-avifenc = []

all-transcode = []

dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-mock",
]

all = [
    "dam[image]",
    "dam[video]",
    "dam[audio]",
    "dam[metadata]",
    "dam[dev]",
    "dam[all-transcode]",
]

[project.urls]
Homepage = "https://example.com/ecs_dam_system" # Placeholder
Repository = "https://example.com/ecs_dam_system.git" # Placeholder


[tool.ruff]
extend = "../../pyproject.toml"
exclude = ["build", "dist"]

[tool.pyright]
extends = "../../pyproject.toml"
include = ["src", "tests"]
exclude = []
reportDeprecated = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
asyncio_mode = "auto"
postgresql_host = "localhost"
postgresql_port = 5432
postgresql_user = "postgres"
postgresql_password = "postgres"

[tool.poe]
include = "../../shared_tasks.toml"

[tool.poe.tasks]
test = "pytest -n auto"
test-cov = "pytest -n auto --cov=dam --cov-report=term-missing --cov-report=xml"
mypy = "mypy --config-file ../../pyproject.toml src/dam tests"

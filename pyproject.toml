[project]
name = "ecs_dam_system"
version = "0.1.0"
description = "A Digital Asset Management system using an Entity-Component-System (ECS) architecture in Python."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "AI Agent", email = "ai.agent@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Topic :: Multimedia :: Graphics :: Media Management",
]

dependencies = [
    "sqlalchemy",
    "alembic",
    "typer", 
    "python-dotenv",
    "pydantic",
    "pydantic-settings", # For settings management
    "hachoir", # For metadata extraction
]

[project.optional-dependencies]
image = [
    "ImageHash",
    "Pillow"
]
video = [
    # "ffmpeg-python" # Using subprocess for now
]
audio = [
    # "mutagen",
]
# Transcoding tool specific dependencies (optional, as tools might be system-installed)
# These are more for tracking/documentation if direct python bindings were used.
# For now, we assume ffmpeg, cjxl, avifenc, etc., are in PATH.
transcode-ffmpeg = []
transcode-cjxl = []
transcode-avifenc = []

# Group for all transcoding related optional dependencies (if any were added above)
all-transcode = [
    # "ecs_dam_system[transcode-ffmpeg]", # Example if they had actual deps
    # "ecs_dam_system[transcode-cjxl]",
    # "ecs_dam_system[transcode-avifenc]",
]

ui = [
    "PyQt6"
]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "aiosqlite", # Added for async SQLite in tests
    "pytest-qt", # Added for UI testing
    "pytest-mock", # Added for mocking
    # "ruff",
    # "mypy"
]

# Convenience group to install all optional dependencies
all = [
    "ecs_dam_system[image]",
    "ecs_dam_system[video]",
    "ecs_dam_system[audio]",
    "ecs_dam_system[ui]",
    "ecs_dam_system[dev]",
    "ecs_dam_system[all-transcode]", # Include the new transcoding group
]


[project.urls]
Homepage = "https://example.com/ecs_dam_system" # Placeholder
Repository = "https://example.com/ecs_dam_system.git" # Placeholder

[project.scripts]
dam-cli = "dam.cli:app"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["dam*"]
exclude = ["tests*"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I001", "I", "F401"] # Enable common flake8 rules and isort
ignore = ["E501"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
qt_api = "pyqt6"
asyncio_mode = "auto" # Try auto mode for pytest-asyncio

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
packages = ["dam"]

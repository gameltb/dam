[project]
name = "ecs_dam_system"
version = "0.1.0"
description = "A Digital Asset Management system using an Entity-Component-System (ECS) architecture in Python."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "AI Agent", email = "ai.agent@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Topic :: Multimedia :: Graphics :: Media Management",
]

dependencies = [
    "sqlalchemy",
    "alembic",
    "typer[all]", # Using [all] for rich tracebacks and shell completion
    "python-dotenv",
    "pydantic",
    "pydantic-settings", # For settings management
    # ImageHash and Pillow moved to optional-dependencies
]

[project.optional-dependencies]
image = [
    "ImageHash",
    "Pillow"
]
dev = [ # Example for dev/test dependencies
    "pytest",
    "pytest-cov",
    # "ruff", # Already configured via [tool.ruff]
    # "mypy"  # Already configured via [tool.mypy]
]

[project.urls]
Homepage = "https://example.com/ecs_dam_system" # Placeholder
Repository = "https://example.com/ecs_dam_system.git" # Placeholder

[project.scripts]
dam-cli = "dam.cli:app"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["dam*"]
exclude = ["tests*"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I001"] # Enable common flake8 rules and isort

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
packages = ["dam"]

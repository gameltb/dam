"""initial_schema_kw_only_from_base

Revision ID: 7a61d5240f08
Revises:
Create Date: 2025-06-24 21:39:41.328013

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7a61d5240f08"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entities",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            onupdate=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "content_hashes",
        sa.Column("hash_type", sa.String(length=64), nullable=False),
        sa.Column("hash_value", sa.String(length=256), nullable=False),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            onupdate=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("entity_id", "hash_type", name="uq_content_hash_entity_type"),
    )
    op.create_index(
        op.f("ix_content_hashes_entity_id"),
        "content_hashes",
        ["entity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_content_hashes_hash_value"),
        "content_hashes",
        ["hash_value"],
        unique=False,
    )
    op.create_table(
        "file_locations",
        sa.Column("filepath", sa.String(length=1024), nullable=False),
        sa.Column("storage_type", sa.String(length=64), nullable=False),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            onupdate=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("entity_id", "filepath", name="uq_file_location_entity_filepath"),
    )
    op.create_index(
        op.f("ix_file_locations_entity_id"),
        "file_locations",
        ["entity_id"],
        unique=False,
    )
    op.create_table(
        "file_properties",
        sa.Column("original_filename", sa.String(length=512), nullable=True),
        sa.Column("file_size_bytes", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.String(length=128), nullable=True),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            onupdate=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("entity_id", name="uq_file_properties_entity_id"),
    )
    op.create_index(
        op.f("ix_file_properties_entity_id"),
        "file_properties",
        ["entity_id"],
        unique=False,
    )
    op.create_table(
        "image_perceptual_hashes",
        sa.Column("hash_type", sa.String(length=64), nullable=False),
        sa.Column("hash_value", sa.String(length=256), nullable=False),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            onupdate=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("entity_id", "hash_type", name="uq_image_perceptual_hash_entity_type"),
    )
    op.create_index(
        op.f("ix_image_perceptual_hashes_entity_id"),
        "image_perceptual_hashes",
        ["entity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_image_perceptual_hashes_hash_value"),
        "image_perceptual_hashes",
        ["hash_value"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_image_perceptual_hashes_hash_value"),
        table_name="image_perceptual_hashes",
    )
    op.drop_index(
        op.f("ix_image_perceptual_hashes_entity_id"),
        table_name="image_perceptual_hashes",
    )
    op.drop_table("image_perceptual_hashes")
    op.drop_index(op.f("ix_file_properties_entity_id"), table_name="file_properties")
    op.drop_table("file_properties")
    op.drop_index(op.f("ix_file_locations_entity_id"), table_name="file_locations")
    op.drop_table("file_locations")
    op.drop_index(op.f("ix_content_hashes_hash_value"), table_name="content_hashes")
    op.drop_index(op.f("ix_content_hashes_entity_id"), table_name="content_hashes")
    op.drop_table("content_hashes")
    op.drop_table("entities")
    # ### end Alembic commands ###

name: Python CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: pgvector/pgvector:pg17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests
        ports:
          - 5432:5432
        # Add a health check to wait for the database to be ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DISPLAY: ':99.0'
      UV_TORCH_BACKEND: 'auto'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      run: python -m pip install --upgrade pip uv

    - name: Get uv cache directory
      id: uv-cache-dir
      run: echo "dir=$(uv cache dir)" >> $GITHUB_OUTPUT

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.uv-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-

    - name: Install ffmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install exiftool
      run: |
        sudo apt-get update
        sudo apt-get install -y libimage-exiftool-perl

    - name: Create virtual environment and install dependencies
      run: |
        uv sync --all-extras

    - name: Run checks
      run: |
        source .venv/bin/activate
        poe check-ci
